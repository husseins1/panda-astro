---
 const getContentFragment = (index, text, obj, type) => {
    let modifiedText = text;


    if (obj) {
      if (obj.bold) {
        modifiedText = `<b>${text}</b>`;
      }

      if (obj.italic) {
        modifiedText = `<em>${text}</em>`;
      }

      if (obj.underline) {
        modifiedText = `<u>${text}</u>`;
      }
    }

    switch (type) {
      case "heading-three":
        return (
          `<h3  class="text-xl font-semibold mb-4">
            ${modifiedText.map((item, i) => (
              `<>${item}</>`
            ))}
          </h3>`
        );
      case "paragraph":
        return (
          `<p class="mb-8 text-lg">
            ${modifiedText.map((item, i) => (
              `<>${item}</>`
            ))}
          </p>`
        );
      case "heading-four":
        return (
         ` <h4  class="text-md font-semibold mb-4">
            ${modifiedText.map((item, i) => (
              `<>${item}</>`
            ))}
          </h4>`
        );
      case "image":
        return (
          `<img
            
            alt=${obj.title}
            height=${obj.height}
            width=${obj.width}
            src=${obj.src}
          />`
        );
      default:
        return modifiedText;
    }
  };


    
const {post} = Astro.props;
---
  
      <div class="bg-white shadow-lg rounded-lg lg:p-8 pb-12 mb-8">
        <div class="relative overflow-hidden shadow-md mb-6">
          <img
            src={post.featuredImage.url}
            alt=""
            class="object-top h-full w-full object-cover  shadow-lg rounded-t-lg lg:rounded-lg"
          />
        </div>
        <div class="px-4 lg:px-0">
          <div class="flex items-center mb-8 w-full">
            <div class="hidden md:flex items-center justify-center lg:mb-0 lg:w-auto mr-8 items-center">
              <!-- <img
                alt={post.author.name}
                height="30px"
                width="30px"
                class="align-middle rounded-full"
                src={post.author.photo.url}
              />
              <p class="inline align-middle text-gray-700 ml-2 font-medium text-lg">
                {post.author.name}
              </p> -->
            </div>
            <div class="font-medium text-gray-700">
              
              
            </div>
          </div>
          <h1 class="mb-8 text-3xl font-semibold">{post.title}</h1>
         {post.content.raw.children.map((typeObj, index) => {
            const children = typeObj.children.map((item, itemindex) =>
              <Fragment set:html={getContentFragment(itemindex, item.text, item,undefined)} />
            );

            return <Fragment set:html={getContentFragment(index, children, typeObj, typeObj.type)}/>;

          })}
          
        </div>
      </div>

